name: Build and Release

on:
  workflow_dispatch: {}
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]  # pin macOS

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install system deps (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm fakeroot dpkg rpm2cpio cpio
          # If you enabled AppImage, also:
          # sudo apt-get install -y squashfs-tools file

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      # Keep this commented unless you actually added electron-rebuild to devDeps
      # - name: Rebuild native modules (sqlite3)
      #   run: npx electron-rebuild -f -w sqlite3

      - name: Build (Forge make)
        env:
          DEBUG: electron-forge:*
          npm_config_loglevel: warn
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: out/make/

      # Always try to collect logs if something failed in this job
      - name: Upload npm & forge logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-logs
          path: |
            ~/.npm/_logs/*
            **/forge-*.log
            **/*.log
          if-no-files-found: ignore

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: macos-14-build
          path: dist/macos
      - uses: actions/download-artifact@v4
        with:
          name: windows-latest-build
          path: dist/windows
      - uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-build
          path: dist/linux
      - name: Create draft release with all files
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
