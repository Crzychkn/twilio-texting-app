name: Build and Release

on:
  workflow_dispatch: {}
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install system deps (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm fakeroot dpkg rpm2cpio cpio
          # If you added AppImage maker, also:
          # sudo apt-get install -y squashfs-tools file

      # macOS installs optionals (so it gets appdmg)
      - name: Install deps (macOS)
        if: matrix.os == 'macos-14'
        run: npm ci --no-audit --no-fund

      # Windows/Linux skip optionals (avoid appdmg)
      - name: Install deps (Windows/Linux)
        if: matrix.os != 'macos-14'
        run: npm ci --omit=optional --no-audit --no-fund

      # --- Diagnostics (see what's actually installed) ---
      - name: Show makers present
        run: |
          echo "makers in package.json:"
          node -e "console.log(require('./package.json').devDependencies || {})"
          echo "npm ls makers:"
          npm ls @electron-forge/maker-squirrel @electron-forge/maker-dmg @electron-forge/maker-zip @electron-forge/maker-deb @electron-forge/maker-rpm || true

      # --- Windows safety install (no change to package.json) ---
      - name: Ensure Windows maker present (no-save)
        if: matrix.os == 'windows-latest'
        run: npm i --no-save @electron-forge/maker-squirrel@^7.8.0 --prefer-online --no-audit --no-fund

      # --- Make with per-OS targets so Forge doesn't resolve unneeded makers ---
      - name: Build (Windows EXE)
        if: matrix.os == 'windows-latest'
        env:
          DEBUG: electron-forge:*
          npm_config_loglevel: warn
        run: npx electron-forge make --targets @electron-forge/maker-squirrel

      - name: Build (macOS DMG/ZIP)
        if: matrix.os == 'macos-14'
        env:
          DEBUG: electron-forge:*
          npm_config_loglevel: warn
        run: npx electron-forge make --targets @electron-forge/maker-dmg,@electron-forge/maker-zip

      - name: Build (Linux DEB/RPM)
        if: matrix.os == 'ubuntu-latest'
        env:
          DEBUG: electron-forge:*
          npm_config_loglevel: warn
        run: npx electron-forge make --targets @electron-forge/maker-deb,@electron-forge/maker-rpm
        # If you also want AppImage:
        # run: npx electron-forge make --targets @electron-forge/maker-deb,@electron-forge/maker-rpm,@reforged/maker-appimage

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: out/make/

      - name: Upload npm & forge logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-logs
          path: |
            ~/.npm/_logs/*
            **/forge-*.log
            **/*.log
